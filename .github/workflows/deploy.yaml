name: deploy

on:
  push:
    branches:
      - main

env:
  AZURE_FUNCTIONAPP_NAME: 'ingestiq-functionapp'   
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'apps/api'     
  RESOURCE_GROUP: "IngestIQ"  
  NODE_VERSION: '22.x'     
  AZURE_WEBAPP_NAME: 'ingestiq-webapp'
  AZURE_REGION: 'centralus'

permissions:
  id-token: write
  contents: read

jobs:
  infra:
    name: Deploy Stack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Stack
        uses: azure/bicep-deploy@v2
        with:
          type: deploymentStack
          operation: create
          name: ${{ env.RESOURCE_GROUP }}
          location: ${{ env.AZURE_REGION }}
          scope: subscription
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template-file: ./packages/infra/main.bicep
          action-on-unmanage-resources: delete
          action-on-unmanage-resourcegroups: delete
          deny-settings-mode: none
          description: ${{ env.RESOURCE_GROUP }} stack

  staging-api:
    name: Deploy Staging API
    needs: infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd apps/api
          npm i
          npm run build

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run the Azure Functions action
        uses: Azure/functions-action@v1
        id: deploy-to-function-app
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}   
          slot-name: staging

  staging-web:
    name: Deploy Staging Web App
    needs: infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Yarn
        run: corepack enable && corepack prepare yarn@stable --activate

      - name: Install Turbo
        run: npm install -g turbo
        env:
          YARN_CACHE_FOLDER: ${{ github.workspace }}/.yarn-cache

      - name: Install and Build 
        run: |
          yarn install --no-immutable
          turbo build --filter=web

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Zip build output
        working-directory: apps/web
        run: zip -r deploy.zip dist/

      - name: Deploy to App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'staging'
          package: './apps/web/deploy.zip'
